#
# @schema.graphql Copyright (c)
# 2643 Av  Melchor Perez de Olguin, Colquiri Sud, Cochabamba, Bolivia.
# 1376 Av General Inofuentes esquina calle 20, La Paz, Bolivia.
# All rights reserved.
#
# This software is the confidential and proprietary information of
# Jalasoft, ("Condidential Information"). You shall # not
# disclose such Confidential Information and shall use it only in
# accordance with the terms of the license agreement you entered into
# with Jalasoft .
#

schema {
    query: Query
    mutation: Mutation
}

scalar Upload

type Resource {
    _id: ID!
    resource_model: String!
    resource_name: String!
    resource_state: String!
    resource_type: String!
}
type Person {
    _id: ID!
    delete: Int!
    person_age: String!
    person_city: String!
    person_country: String!
    person_full_name: String!
    person_gender: String!
}

type PostResult {
    success: Boolean!
    errors: [String]
    post: Resource
}

type PostPerson {
    success: Boolean!
    errors: [String]
    post: Person
}

type PostsResult {
    success: Boolean!
    errors: [String]
    posts: [Resource]
}
type PostsResultPerson {
    success: Boolean!
    errors: [String]
    posts: [Person]
}

type Query {
    listPosts: PostsResult!
    listPostsPerson: PostsResultPerson!
    getPost(id: ID!): PostResult!
    getPostPerson(id: ID!): PostPerson!
}

type result_convert_ocr{
    status: Int!
    message: String!
}

type ocr_converter{
    success: Boolean!
    errors: [String]
    post: result_convert_ocr
}

type result_convert_image{
    status: Int!
    message: String!
}

type image_converter{
    success: Boolean!
    errors: [String]
    post: result_convert_image
}

type result_convert_metadata{
    status: Int!
    message: String!
}

type metadata_converter{
    success: Boolean!
    errors: [String]
    post: result_convert_metadata
}

type result_convert_translator{
    status: Int!
    message: String!
}

type translator_converter{
    success: Boolean!
    errors: [String]
    post: result_convert_translator
}

type result_convert_waptxt{
    status: Int!
    message: String!
}

type waptxt_converter{
    success: Boolean!
    errors: [String]
    post: result_convert_waptxt
}

type result_convert_video{
    status: Int!
    message: String!
}

type video_converter{
    success: Boolean!
    errors: [String]
    post: result_convert_video
}

type result_convert_audio{
    status: Int!
    message: String!
}

type audio_converter{
    success: Boolean!
    errors: [String]
    post: result_convert_audio
}


type Mutation {
    createPost(name: String!, type: String!, model: String!, state: String!): PostResult!
    updatePost(id_source: ID!, name: String!  ): PostResult!
    deletePost(id_source: ID): PostResult!
    createPerson(name: String!, age: String!, city:String!, country:String!, gender:String! ): PostPerson!
    updatePerson(id_person: ID!, city: String): PostPerson!
    convert_ocr(file: Upload!, language: String!, format: String!, converter: String!): ocr_converter
    convert_image(file: Upload!, color: String!, rotate: String!, vertical_flip: String!, horizontal_flip: String!, height: String!,
    width: String!, format: String!, convert: String!): image_converter
    convert_metadata(file: Upload!, format: String!, convert: String!): metadata_converter
    convert_translator(file: Upload!, language_in: String!, language_out: String!, format: String!, convert: String!): translator_converter
    convert_waptxt(file: Upload!, format: String!, convert: String!, language_in: String!): waptxt_converter
    convert_video(file: Upload!, frame: String!, width: String!, height: String!, color: String!, format: String!, convert: String!): video_converter
    convert_audio(file: Upload!, acodex: String!, bitrate: String!, sample_rate: String!, audio_channel: String!, format: String!, convert: String!): audio_converter
}